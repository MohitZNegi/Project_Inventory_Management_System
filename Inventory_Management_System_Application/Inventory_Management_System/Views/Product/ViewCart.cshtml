@model IEnumerable<Inventory_Management_System.Models.CartItem>

<style>
    .container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 70vh;
        font-family: Arial, sans-serif;
    }

    #cart-table {
        width: 200%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        #cart-table th {
            background-color: #343a40;
            color: #fff;
            padding: 10px;
            text-align: center;
        }

        #cart-table td {
            border-bottom: 1px solid #dee2e6;
            padding: 10px;
            text-align: center;
            vertical-align: middle;
        }

    .cart-item-quantity {
        width: 80px;
        text-align: center;
        margin: 0 auto;
        display: block;
    }

    .btn {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-danger {
        background-color: #dc3545;
        color: #fff;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    .alert {
        padding: 10px;
        margin-top: 20px;
        border-radius: 4px;
        text-align: center;
    }

    .alert-success {
        background-color: #28a745;
        color: #fff;
    }

    .alert-danger {
        background-color: #dc3545;
        color: #fff;
    }

    .product-name {
        font-weight: bold;
        color: #333;
        text-transform: capitalize;
    }

        .product-name:hover {
            text-decoration: underline;
        }

    .confirm-message {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 20px;
        border-radius: 8px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        display: none; /* Initially hide the confirmation messages */
    }

        .confirm-message p {
            margin-bottom: 10px;
        }

    .confirm-btn {
        padding: 8px 16px;
        margin-right: 5px;
        background-color: #007bff; /* Blue button color */
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .confirm-btn:hover {
            background-color: #0056b3; /* Darker blue on hover */
        }

    .cancel-btn {
        padding: 8px 16px;
        background-color: red; /* Blue button color */
        color: #fff;
        margin-bottom: 3px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .cancel-btn:hover {
            background-color: darkred; /* Darker gray on hover */
        }
</style>

<div class="container">
    <h2>Shopping Cart</h2>

    <div id="empty-cart-msg" class="alert alert-info">Your cart is empty.</div>
    <table id="cart-table" class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Product Image</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr data-cart-item-id="@item.CartID">
                    <td><span class="product-name">@item.Product.ProductName</span></td>
                    <td><img src="@item.Product.ProductImg" alt="@item.Product.ProductName" style="width: 100px; height: auto;" /></td>
                    <td>
                        <input type="number" name="quantity" class="form-control cart-item-quantity" value="@item.Quantity" />
                    </td>
                    <td>$@item.Product.ProductPrice</td>
                    <td class="cart-item-total-price">$@(item.Product.ProductPrice * item.Quantity)</td>
                    <td>
                        <button type="button" class="btn btn-danger delete-cart-item">Remove from Cart</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button id="clear-cart" type="button" class="btn btn-danger">Clear Cart</button>

    <div class="confirm-message">
        <p>Are you sure you want to clear your cart?</p>
        <button class="confirm-btn">Confirm</button>
        <button class="cancel-btn btn btn-secondary">Cancel</button> <!-- Added btn-secondary for cancel button -->
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initial check for empty cart
            checkEmptyCart();

            // Update cart item quantity
            $('.cart-item-quantity').on('change', function () {
                var cartItemId = $(this).closest('tr').data('cart-item-id');
                var newQuantity = $(this).val();

                $.ajax({
                    url: '@Url.Action("EditCartItem", "Product")',
                    type: 'POST',
                    data: { id: cartItemId, quantity: newQuantity },
                    success: function (response) {
                        if (response.success) {
                            updateCartItemTotalPrice(cartItemId, newQuantity);
                        } else {
                            showAlert('Failed to update cart item quantity.', 'danger');
                        }
                        checkEmptyCart(); // Check if cart is empty after updating quantity
                    },
                    error: function () {
                        showAlert('Failed to update cart item quantity.', 'danger');
                    }
                });
            });

            // Delete cart item
            $('.delete-cart-item').on('click', function () {
                var cartItemId = $(this).closest('tr').data('cart-item-id');
                showConfirmation('Are you sure you want to delete this item?', function () {
                    $.ajax({
                        url: '@Url.Action("DeleteCartItem", "Product")',
                        type: 'POST',
                        data: { id: cartItemId },
                        success: function (response) {
                            if (response.success) {
                                $('tr[data-cart-item-id="' + cartItemId + '"]').remove();
                                $('#cartItemCount').text(response.cartItemCount); // Update cart count
                                checkEmptyCart(); // Check if cart is empty after deletion
                            } else {
                                showAlert('Failed to delete cart item.', 'danger');
                            }
                        },
                        error: function () {
                            showAlert('Failed to delete cart item.', 'danger');
                        }
                    });
                });
            }); 

            // Clear cart
            $('#clear-cart').on('click', function () {
                showConfirmation('Are you sure you want to clear your cart?', function () {
                    $.ajax({
                        url: '@Url.Action("ClearCart", "Product")',
                        type: 'POST',
                        success: function (response) {
                            if (response.success) {
                                $('#cart-table').remove(); // Remove the cart table
                                $('#clear-cart').remove(); // Remove the clear cart button
                                $('#cartItemCount').text(response.cartItemCount); // Update cart count
                                checkEmptyCart();
                            } else {
                                showAlert('Failed to clear cart.', 'danger');
                            }
                        },
                        error: function () {
                            showAlert('Failed to clear cart.', 'danger');
                        }
                    });
                });
            });

            // Helper function to update the total price for a cart item
            function updateCartItemTotalPrice(cartItemId, newQuantity) {
                var productPrice = parseFloat($('tr[data-cart-item-id="' + cartItemId + '"] td:nth-child(4)').text().replace('$', '').replace(',', ''));
                var totalPrice = productPrice * newQuantity;
                $('tr[data-cart-item-id="' + cartItemId + '"] .cart-item-total-price').text('$' + totalPrice.toFixed(2));
            }

            // Helper function to show confirmation message
            function showConfirmation(message, confirmCallback) {
                var confirmHtml = '<div class="confirm-message">' +
                    '<p>' + message + '</p>' +
                    '<button class="confirm-btn">Confirm</button>' +
                    '<button class="cancel-btn btn btn-secondary">Cancel</button>' +
                    '</div>';
                $('.container').append(confirmHtml);

                $('.confirm-btn').on('click', function () {
                    $('.confirm-message').fadeOut('slow', function () {
                        $(this).remove();
                        if (confirmCallback && typeof confirmCallback === 'function') {
                            confirmCallback();
                        }
                    });
                });

                $('.cancel-btn').on('click', function () {
                    $('.confirm-message').fadeOut('slow', function () {
                        $(this).remove();
                    });
                });

                // Show the confirmation message
                $('.confirm-message').fadeIn('slow');
            }

            // Helper function to check if cart is empty and show/hide empty cart message
            function checkEmptyCart() {
                var isEmpty = $('#cart-table tbody tr').length === 0;
                var emptyCartMsg = $('#empty-cart-msg');

                if (isEmpty) {
                    $('#cart-table').remove(); // Remove the cart table
                    $('#clear-cart').remove(); // Remove the clear cart button
                    emptyCartMsg.show(); // Show empty cart message
                } else {
                    emptyCartMsg.hide(); // Hide empty cart message
                }
            }
        });
    </script>
}
