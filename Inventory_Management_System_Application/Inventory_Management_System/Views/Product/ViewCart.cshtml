@model IEnumerable<Inventory_Management_System.Models.CartItem>
@{
    ViewData["Title"] = "Cart";
}
<head>

    <link href="~/css/site.css" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">

<style>
    .container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 70vh;
        min-height: 200vh;
        font-family: Arial, sans-serif;
    }

    #cart-table {
        width: 200%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        #cart-table th {
            background-color: #343a40;
            color: #fff;
            padding: 10px;
            text-align: center;
        }

        #cart-table td {
            border-bottom: 1px solid #dee2e6;
            padding: 10px;
            text-align: center;
            vertical-align: middle;
        }

    .cart-item-quantity {
        width: 80px;
        text-align: center;
        margin: 0 auto;
        display: block;
    }

    .btn {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-danger {
        background-color: #dc3545;
        color: #fff;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    .alert {
        padding: 10px;
        margin-top: 20px;
        border-radius: 4px;
        text-align: center;
    }

    .alert-success {
        background-color: #28a745;
        color: #fff;
    }

    .alert-danger {
        background-color: #dc3545;
        color: #fff;
    }

    .product-name {
        font-weight: bold;
        color: #333;
        text-transform: capitalize;
        transition: font-size 0.2s ease;
    }

        .product-name:hover {
            text-decoration: underline;
            color: #333;
            font-size: 1.1em;
        }


    .confirm-message {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 20px;
        border-radius: 8px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        display: none;
    }

        .confirm-message p {
            margin-bottom: 10px;
        }

    .confirm-btn {
        padding: 8px 16px;
        margin-right: 5px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .confirm-btn:hover {
            background-color: #0056b3;
        }

    .cancel-btn {
        padding: 8px 16px;
        background-color: red;
        color: #fff;
        margin-bottom: 3px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .cancel-btn:hover {
            background-color: darkred;
        }
    /* Footer */
    footer {
        background-color: #343a40;
        color: #fff;
        display: absolute;
        padding: 40px 0;
        text-align: left; /* Align text to the left */
        margin-top: 50px;
        margin-bottom: 0px;
        width: 100%;
        margin-left: -405px;
        overflow-x: hidden;
        }

        footer button.btn-primary {
            background-color: #0d6efd;
            border-color: #0d6efd;
            color: #fff;
            padding: 6px 10px; /* Adjust button padding for smaller size */
            margin-top: 10px; /* Add margin to separate from form */
            font-size: 14px; /* Adjust font size */
            width: 35%;
        }

        footer .form-group {
            margin-bottom: 10px; /* Remove bottom margin for form group */
            margin-left: 100px;
        }

        footer .signup-link {
            text-align: left; /* Align signup text to the left */
            margin-top: 20px; /* Add top margin to separate from form */
        }

            footer .signup-link a {
                color: #007bff;
                text-decoration: none;
            }

        footer .input-group {
            margin-bottom: 10px; /* Add margin below input group */
        }

            footer .form-control{
                width:100%;
                margin-left: -100px;
            }

        footer .input-group-append .btn {
            padding: 8px 12px; /* Adjust button padding for smaller size */
        }

        footer h4, footer h5 {
            font-size: 1.2rem;
            margin-bottom: 1rem;
        }

        footer ul {
            list-style: none;
            padding: 0;
        }

            footer ul li {
                margin-bottom: 0.5rem;
            }

                footer ul li a {
                    color: #fff;
                    text-decoration: none;
                }

                    footer ul li a:hover {
                        color: #ccc;
                    }

        .pagination {
            margin-top: 20px;
            display: flex;
            justify-content: center;
        }

        .pagination-page-button {
            margin: 0 5px;
            padding: 5px 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            text-decoration: none;
            color: #333;
            transition: background-color 0.3s ease;
        }

            .pagination-page-button:hover {
                background-color: #333;
                color: white;
                border: 0px;
            }

</style>
</head>
<div class="container">
    <h2 class="cart-title">Shopping Cart</h2>

    <div id="empty-cart-msg" class="alert alert-info">Your cart is empty.</div>
    <table id="cart-table" class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Product Image</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Skip((ViewBag.CurrentPage - 1) * 10).Take(10))
            {
                <tr data-cart-item-id="@item.CartID">
                    <td>
                        <a href="@Url.Action("ProductItems", "Product", new { id = item.Product.ProductID })" class="product-name">@item.Product.ProductName</a>
                    </td>
                    <td>
                        <img src="@item.Product.ProductImg" alt="@item.Product.ProductName" style="width: 100px; height: auto;" />
                    </td>
                    <td>
                        <input type="number" name="quantity" class="form-control cart-item-quantity" value="@item.Quantity" />
                    </td>
                    <td>$@item.Product.ProductPrice</td>
                    <td class="cart-item-total-price">$@(item.Product.ProductPrice * item.Quantity)</td>
                    <td>
                        <button type="button" class="btn btn-danger delete-cart-item">Remove from Cart</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="pagination">
        @if (ViewData["PageCounts"] != null && ViewData["CurrentPages"] != null)
        {
            var pageCount = (int)ViewData["PageCounts"];
            var currentPage = (int)ViewData["CurrentPages"];

            <ul class="pagination-list">
                @if (currentPage > 1)
                {
                    <li><a href="@Url.Action("Cart", new { page = currentPage - 1 })">Previous</a></li>
                }

                @for (int i = 1; i <= pageCount; i++)
                {
                    <li class="@(i == currentPage ? "active" : "")"><a href="@Url.Action("Cart", new { page = i })">@i</a></li>
                }

                @if (currentPage < pageCount)
                {
                    <li><a href="@Url.Action("Cart", new { page = currentPage + 1 })">Next</a></li>
                }
            </ul>
        }
    </div>
</div>
@* 
<footer>
    <div class="footer">
        <div class="row">
            <div class="col-md-3">
                <img src="https://res.cloudinary.com/dup5hdi05/image/upload/v1715090528/ware-master-high-resolution-logo-transparent_2_xnts9o.png" alt="Company Logo" style="height: 30px; width: 200px;">
            </div>
            <div class="col-md-3">
                <h4><strong>About Us</strong></h4>
                <ul class="list-unstyled">
                    <li><a href="/home/contactus">Contact</a></li>
                    <li><a href="/home/faqs">FAQs</a></li>
                    <li><a href="/home/aboutus">About Us</a></li>
                </ul>
            </div>

            <div class="col-md-3">
                <h4><strong>Terms</strong></h4>
                <ul class="list-unstyled">
                    <li><a href="/home/privacy">Privacy</a></li>
                    <li><a href="/home/termsandservices">T&S</a></li>
                    <li><a href="/home/refundpolicy">Refund Policy</a></li>
                </ul>
            </div>
            <div class="col-md-3">
                <h4>Subscribe</h4>
                <form>
                    <div class="form-group">
                        <input type="email" class="form-control" placeholder="Enter your email">
                    </div>
                    <button type="submit" class="btn btn-primary">Subscribe</button>
                </form>
                <p>By subscribing, you agree to our Privacy Policy and consent to receive updates.</p>
            </div>
        </div>
    </div>
</footer> *@

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initial check for empty cart
            checkEmptyCart();

            // Update cart item quantity
            $('.cart-item-quantity').on('change', function () {
                var cartItemId = $(this).closest('tr').data('cart-item-id');
                var newQuantity = $(this).val();

                $.ajax({
                    url: '@Url.Action("EditCartItem", "Product")',
                    type: 'POST',
                    data: { id: cartItemId, quantity: newQuantity },
                    success: function (response) {
                        if (response.success) {
                            updateCartItemTotalPrice(cartItemId, newQuantity);
                        } else {
                            showAlert('Failed to update cart item quantity.', 'danger');
                        }
                        checkEmptyCart(); // Check if cart is empty after updating quantity
                    },
                    error: function () {
                        showAlert('Failed to update cart item quantity.', 'danger');
                    }
                });
            });

            // Delete cart item
            $('.delete-cart-item').on('click', function () {
                var cartItemId = $(this).closest('tr').data('cart-item-id');
                showConfirmation('Are you sure you want to delete this item?', function () {
                    $.ajax({
                        url: '@Url.Action("DeleteCartItem", "Product")',
                        type: 'POST',
                        data: { id: cartItemId },
                        success: function (response) {
                            if (response.success) {
                                $('tr[data-cart-item-id="' + cartItemId + '"]').remove();
                                $('#cartItemCount').text(response.cartItemCount); // Update cart count
                                checkEmptyCart(); // Check if cart is empty after deletion
                            } else {
                                showAlert('Failed to delete cart item.', 'danger');
                            }
                        },
                        error: function () {
                            showAlert('Failed to delete cart item.', 'danger');
                        }
                    });
                });
            }); 

            // Clear cart
            $('#clear-cart').on('click', function () {
                showConfirmation('Are you sure you want to clear your cart?', function () {
                    $.ajax({
                        url: '@Url.Action("ClearCart", "Product")',
                        type: 'POST',
                        success: function (response) {
                            if (response.success) {
                                $('#cart-table').remove(); // Remove the cart table
                                $('#clear-cart').remove(); // Remove the clear cart button
                                $('#cartItemCount').text(response.cartItemCount); // Update cart count
                                checkEmptyCart();
                            } else {
                                showAlert('Failed to clear cart.', 'danger');
                            }
                        },
                        error: function () {
                            showAlert('Failed to clear cart.', 'danger');
                        }
                    });
                });
            });

            // Helper function to update the total price for a cart item
            function updateCartItemTotalPrice(cartItemId, newQuantity) {
                var productPrice = parseFloat($('tr[data-cart-item-id="' + cartItemId + '"] td:nth-child(4)').text().replace('$', '').replace(',', ''));
                var totalPrice = productPrice * newQuantity;
                $('tr[data-cart-item-id="' + cartItemId + '"] .cart-item-total-price').text('$' + totalPrice.toFixed(2));
            }

            // Helper function to show confirmation message
            function showConfirmation(message, confirmCallback) {
                var confirmHtml = '<div class="confirm-message">' +
                    '<p>' + message + '</p>' +
                    '<button class="confirm-btn">Confirm</button>' +
                    '<button class="cancel-btn btn btn-secondary">Cancel</button>' +
                    '</div>';
                $('.container').append(confirmHtml);

                $('.confirm-btn').on('click', function () {
                    $('.confirm-message').fadeOut('slow', function () {
                        $(this).remove();
                        if (confirmCallback && typeof confirmCallback === 'function') {
                            confirmCallback();
                        }
                    });
                });

                $('.cancel-btn').on('click', function () {
                    $('.confirm-message').fadeOut('slow', function () {
                        $(this).remove();
                    });
                });

                // Show the confirmation message
                $('.confirm-message').fadeIn('slow');
            }

            // Helper function to check if cart is empty and show/hide empty cart message
            function checkEmptyCart() {
                var isEmpty = $('#cart-table tbody tr').length === 0;
                var emptyCartMsg = $('#empty-cart-msg');

                if (isEmpty) {
                    $('#cart-table').remove(); // Remove the cart table
                    $('#clear-cart').remove(); // Remove the clear cart button
                    emptyCartMsg.show(); // Show empty cart message
                } else {
                    emptyCartMsg.hide(); // Hide empty cart message
                }
            }
        });
    </script>
}
