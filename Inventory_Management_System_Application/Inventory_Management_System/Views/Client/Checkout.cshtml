@using System.Linq;
@using Inventory_Management_System.Areas.Identity.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model Inventory_Management_System.Models.Order

@{
    ViewData["Title"] = "Checkout";
}

<h2>Checkout</h2>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4>Cart Items</h4>
            </div>
            <div class="card-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cartItem in ViewBag.CartItems)
                        {
                            <tr>
                                <td>@cartItem.Product.ProductName</td>
                                <td>@cartItem.Quantity</td>
                                <td>@cartItem.Product.ProductPrice</td>
                                <td>@(cartItem.Quantity * cartItem.Product.ProductPrice)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h4>Order Summary</h4>
            </div>
            <div class="card-body">
                <form id="orderForm">
                    <div class="form-group">
                        <label asp-for="OrderDate">Order Date</label>
                        <input asp-for="OrderDate" id="OrderDate" class="form-control" />
                        <span asp-validation-for="OrderDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="ShippingAddress">Shipping Address</label>
                        <textarea id="ShippingAddress" name="ShippingAddress" class="form-control"></textarea>
                        <span class="text-danger" id="shippingAddressError"></span>
                    </div>
                    <div class="form-group">
                        <label>Total Amount</label>
                        <input type="text" id="TotalAmount" class="form-control" value="@ViewBag.TotalAmount" readonly />
                    </div>
                    <button id="placeOrderBtn" class="btn btn-primary">Place Order</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootbox@5.5.2/dist/bootbox.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootbox@5.5.2/dist/bootbox.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#orderForm').on('submit', function (event) {
                event.preventDefault(); // Prevent the default form submission

                // Gather form data
                var orderDate = $('#OrderDate').val();
                var shippingAddress = $('#ShippingAddress').val();

                // Validate the form data
                if (!orderDate || !shippingAddress) {
                    if (!orderDate) {
                        $('#OrderDate').addClass('is-invalid');
                    }
                    if (!shippingAddress) {
                        $('#shippingAddressError').text('Shipping Address is required.');
                    }
                    return;
                }

                // Show confirmation dialog
                bootbox.confirm({
                    message: "Are you sure you want to place this order?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            // Prepare order request object
                            var orderRequest = {
                                OrderDate: orderDate,
                                ShippingAddress: shippingAddress
                            };

                            // Make AJAX POST request to the PlaceOrder API endpoint
                            $.ajax({
                                url: '/api/Client/PlaceOrder',
                                type: 'POST',
                                contentType: 'application/json',
                                data: JSON.stringify(orderRequest),
                                success: function (response) {
                                    // Handle success response
                                    bootbox.alert('Order placed successfully!', function () {
                                        // Redirect to the order confirmation page or another relevant page
                                        window.location.href = '/Client/OrderHistory';
                                    });
                                },
                                error: function (xhr, status, error) {
                                    // Log the full error response to the console
                                    console.error('Error placing order:', xhr.responseText);

                                    // Handle error response
                                    var errorMessage = 'Failed to place order: ';
                                    if (xhr.responseJSON && xhr.responseJSON.errors) {
                                        $.each(xhr.responseJSON.errors, function (key, value) {
                                            errorMessage += key + ': ' + value.join(', ') + ' ';
                                        });
                                    } else {
                                        errorMessage += xhr.responseText;
                                    }
                                    bootbox.alert(errorMessage);
                                }
                            });
                        }
                    }
                });
            });
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}